{
	"compiler": {
		"version": "0.8.23+commit.f704f362"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"name": "LINK",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "WETH",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "linktoken",
				"outputs": [
					{
						"internalType": "contract IERC20",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "poolFee",
				"outputs": [
					{
						"internalType": "uint24",
						"name": "",
						"type": "uint24"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "routerAddress",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amountIn",
						"type": "uint256"
					}
				],
				"name": "swapExactInputSingle",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "amountOut",
						"type": "uint256"
					}
				],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amountOut",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amountInMaximum",
						"type": "uint256"
					}
				],
				"name": "swapExactOutputSingle",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "amountIn",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "swapRouter",
				"outputs": [
					{
						"internalType": "contract ISwapRouter",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"swapExactInputSingle(uint256)": {
					"details": "The calling address must approve this contract to spend at least `amountIn` worth of its LINK for this function to succeed.",
					"params": {
						"amountIn": "The exact amount of LINK that will be swapped for WETH."
					},
					"returns": {
						"amountOut": "The amount of WETH received."
					}
				},
				"swapExactOutputSingle(uint256,uint256)": {
					"details": "The calling address must approve this contract to spend its LINK for this function to succeed. As the amount of input LINK is variable, the calling address will need to approve for a slightly higher amount, anticipating some variance.",
					"params": {
						"amountInMaximum": "The amount of LINK we are willing to spend to receive the specified amount of WETH.",
						"amountOut": "The exact amount of WETH to receive from the swap."
					},
					"returns": {
						"amountIn": "The amount of LINK actually spent in the swap."
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"swapExactInputSingle(uint256)": {
					"notice": "swapExactInputSingle swaps a fixed amount of LINK for a maximum possible amount of WETH using the LINK/WETH 0.3% pool by calling `exactInputSingle` in the swap router."
				},
				"swapExactOutputSingle(uint256,uint256)": {
					"notice": "swapExactOutputSingle swaps a minimum possible amount of LINK for a fixed amount of WETH."
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/SingleSwap.sol": "SingleSwap"
		},
		"evmVersion": "shanghai",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
			"keccak256": "0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652",
				"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS"
			]
		},
		"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
			"keccak256": "0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53",
				"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM"
			]
		},
		"contracts/SingleSwap.sol": {
			"keccak256": "0xbd47ebd11432a0425aac2d23f95c2b6e54c5ec6a36a054f72ecbe969ca57cadd",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://d0aa96df2b98ae5d921a19a3fe67853136d2269b45c77706136a64cc8073ee96",
				"dweb:/ipfs/QmUkWF7AdWkVzfNWfGMxcdP55zN4kVx3wq5F4wKSLTxQDc"
			]
		}
	},
	"version": 1
}